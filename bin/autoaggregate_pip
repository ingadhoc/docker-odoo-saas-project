#!/usr/bin/env python
# -*- coding: utf-8 -*-

import os
import yaml

from subprocess import check_call
from argparse import ArgumentParser

import logging
logger = logging.getLogger(__name__)

# Define CLI options
parser = ArgumentParser(
    description="Runs git-aggregate post install pip install if required")

parser.add_argument(
    "-c", "--config", type=str, default="repos.yml", help="repos.yml file"
)

parser.add_argument(
    "-o",
    "--output",
    type=str,
    default=os.getcwd(),
)

args = parser.parse_args()

with open(args.config) as yaml_file:
    for doc in yaml.safe_load_all(yaml_file):
        for repo in doc:
            repo_path = os.path.abspath(os.path.join(args.output, repo))
            shell_command_after = doc[repo].get('shell_command_after')
            if shell_command_after:
                for cmd in shell_command_after:
                    if cmd.startswith("pip install"):
                        print("%s { cwd: %s }" % (cmd, repo_path))
                        check_call(cmd, shell=True, cwd=repo_path)
